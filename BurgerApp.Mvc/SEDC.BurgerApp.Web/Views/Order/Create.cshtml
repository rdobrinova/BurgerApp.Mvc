@using SEDC.BurgerApp.BLL.DTOs.Burgers;
@using SEDC.BurgerApp.BLL.DTOs.Orders;
@model CreateOrderDTO

@{
    ViewData["Title"] = "Create";
}

<h1>Create new Order</h1>

@using (Html.BeginForm("Create", "Order", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(model => model.FullName)
        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FullName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address)
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Address)
    </div>

    <br />

    <div class="form-group">
        @Html.DropDownListFor(model => model.OrderedBurgerId, (SelectList)ViewBag.Burgers, "-- Select Burger --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.OrderedBurgerId)
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.IsDelivered)
        @Html.CheckBoxFor(model => model.IsDelivered, new { @class = "form-check-input" })
        @Html.ValidationMessageFor(model => model.IsDelivered)
    </div>

    <hr />

    <form class="d-inline" asp-controller="Order" asp-action="Index" method="post">
        <button class="btn btn-primary">Create</button>
    </form>

    <a class="d-inline btn btn-primary" asp-action="Index">
        Back to List
    </a>
}